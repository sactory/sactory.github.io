/*! Transpiled from sandbox.jsb using Sactory v0.102.0. Do not edit manually. */!function(a){if(typeof define=='function'&&define.amd){define(['sactory'], a)}else if(typeof Sactory=='function'){a(Sactory)}else{a(require('sactory'))}}(function(’¢, ’£, ’•, ’¶, ’™){’¢.ready(function(){

var file, key, hash = null;

var version = ’¢.observable("?");

’¢.subscribe(’•, version, function(value){
	document.title = "Sandbox - Sactory v" + value;
});

var tabs = {
	"output": "Output",
	"error": "Errors",
	"warn": "Warnings",
	"code": "Transpiled Code",
	"info": "Info"
};

var debugMode = ’¢.observable(true, "is_debug");
var alignment = ’¢.observable("y", "alignment");

var tab = ’¢.observable("output", "current_tab");

function switchTab(from, to) {
	if(tab.value == from) tab.value = to;
}

var inputs = {};
var outputs = {};

var prefix = "storage";

if(window.location.hash) {
	hash = JSON.parse(atob(window.location.hash.substr(1)));
	if(hash.prefix) prefix = hash.prefix;
} else {
	file = ’¢.observable("snippet", "current_snippet");
	key = ’¢.computedObservable(this, ’•, [file], function(){return prefix + "." + file.value}, []);
}

var defaultContent = {
	content: {
		js: "var count = **0;\n",
		html: "<button +click={ *count++ }>\n\tClicked ${*count} times\n</button>\n\nif(*count > 0) {\n\t<button +click={ *count = 0 }>\n\t\tReset count\n\t</button>\n}\n",
		css: ""
	},
	show: {
		js: true,
		html: true,
		css: false
	},
	mode: {
		js: "code",
		html: "html :logic",
		css: "ssb"
	}
};

var modes = {
	js: ["code"],
	html: ["html", "html :logic", "html :trimmed", "html :logic :trimmed", "text", "text :logic"],
	css: ["css", "css :logic", "ssb"]
};

var content = hash ? ’¢.observable.deep(hash.content) : ’¢.observable.deep(defaultContent, key.value);
var showCount = ’¢.computedObservable(this, ’•, [content], function(){return content.value.show.js + content.value.show.html + content.value.show.css}, []);
var result = ’¢.computedObservable(this, ’•, [debugMode, content], function(){return (function(){
	debugMode.value; // just to add it as a dependency
	var result = {source: "", before: "", after: "", info: {time: 0, tags: {}, features: []}, errors: [], warnings: []};
	var transpiler = new Transpiler({namespace: hash ? hash.name : file.value});
	function transpile(type, before, after) {
		before = before ? before + '<!COMMENT start>' : "";
		after = after ? '<!COMMENT end>' + after : "";
		try {
			var info = transpiler.transpile(before + content.value.content[type] + after);
			result.info.time += info.time;
			result.info.variables = info.variables;
			for(var tag in info.tags) {
				result.info.tags[tag] = (result.info.tags[tag] || 0) + info.tags[tag];
			}
			info.features.forEach(function(feature){
				if(result.info.features.indexOf(feature) == -1) result.info.features.push(feature);
			});
			Array.prototype.push.apply(result.warnings, info.warnings);
			var source = info.source.contentOnly;
			if(before) source = source.substr(source.indexOf("/*start*/") + 9);
			if(after) source = source.substring(0, source.lastIndexOf("/*end*/"));
			result[type] = source;
			result.before = info.source.before;
			result.source += info.source.contentOnly;
			result.after = info.source.after;
			if(outputs[type]) outputs[type].setValue(info.source.contentOnly);
		} catch(e) {
			console.error(e);
			result.errors.push(e);
		}
	}
	transpile("js");
	if(content.value.show.html) transpile("html", "<:body #" + content.value.mode.html + ">", "</:body>");
	if(content.value.show.css) transpile("css", "<style :head #" + content.value.mode.css + ">", "</style>");
	if(result.errors.length) switchTab("output", "error");
	else switchTab("error", "output");
	return result;
})()}, []);
if(!hash) {
	if(window.localStorage && window.localStorage.getItem(key.value)) {
		content.value = JSON.parse(window.localStorage.getItem(key.value));
	}
	’¢.subscribe(’•, file, function(value){
		content.storage.key = key.value;
		var newContent = content.storage.get(defaultContent);
		content.storage.key = "";
		content.value = newContent;
		content.storage.key = key.value;
		for(var type in content.value.content) {
			if(inputs[type]) inputs[type].setValue(content.value.content[type]);
		}
	});
}

function save() {
	content.merge({
		content: {
			js: inputs.js ? inputs.js.getValue() : "",
			html: inputs.html ? inputs.html.getValue() : "",
			css: inputs.css ? inputs.css.getValue() : ""
		}
	});
}
’¢(this, ’£, ’•, ’¶, [’¢.create, "style", {}], [’¢.body, ’™, function(’£, ’¶, ’™){’¢.compileAndBindStyle(function(){var ’•’´=’¢.root();var fontFamily = "Segoe UI";
var color = {
	red: {
		background: "#D32F2F",
		text: "#F44336"
	}
};
var ’•’¨=’¢.select(’•’´, ".top"); 
	var ’•’≠=’¢.select(’•’¨, ".filename"); 
		var ’•’Æ=’¢.select(’•’≠, "span, input, select"); 
			’•’Æ.value("font-family", (fontFamily));
			’•’Æ.value("height", "26px");
			’•’Æ.value("margin", "4px 0 4px 4px");
			’•’Æ.value("padding", "0 8px");
		
	
	var ’•’∞=’¢.select(’•’¨, ".input"); 
		’•’∞.value("height", "calc(100% - 34px)");
		var ’•’±=’¢.select(’•’∞, ".editor .mode"); 
			’•’±.value("position", "absolute");
			’•’±.value("z-index", "999");
			’•’±.value("top", "8px");
			’•’±.value("right", "22px");
			’•’±.value("padding", "2px 4px");
			’•’±.value("font-size, line-height", "12px");
			’•’±.value("background", "rgba(187, 187, 187, .3)");
			’•’±.value("color", "#333");
			’•’±.value("border-radius", "1000px");
			’•’±.value("border", "none");
			’•’±.value("opacity", ".5");
			’•’±.value("transition", "opacity .1s linear");
			var ’•’≤=’¢.select(’•’±, "&:hover"); 
				’•’≤.value("opacity", "1");
			
			var ’•’≥=’¢.select(’•’±, "&:focus"); 
				’•’≥.value("outline", "none");
			
		
	

var ’•’¥=’¢.select(’•’´, ".bottom"); 
	var ’•’µ=’¢.select(’•’¥, "nav"); 
		var ’•’∂=’¢.select(’•’µ, ".item"); 
			’•’∂.value("position", "relative");
			’•’∂.value("cursor", "pointer");
			’•’∂.value("padding", "8px");
			var ’•’∑=’¢.select(’•’∂, "&:hover::after, &.active::after"); 
				’•’∑.value("content", "''");
				’•’∑.value("position", "absolute");
				’•’∑.value("bottom", "-2px");
				’•’∑.value("left, right", "0");
				’•’∑.value("height", "4px");
			
			var ’•’∏=’¢.select(’•’∂, "&:not(.active):hover::after"); 
				’•’∏.value("opacity", ".5");
				’•’∏.value("background", "darkviolet");
			
			var ’•’π=’¢.select(’•’∂, "&.active::after"); 
				’•’π.value("background", "darkviolet");
			
			var ’•’∫=’¢.select(’•’∂, ".has-errors &.error, .has-warnings &.warn"); 
				var ’•’ª=’¢.select(’•’∫, "&::before"); 
					’•’ª.value("content", "'‚Ä¢ '");
					’•’ª.value("color", (color.red.text));
					’•’ª.value("font-weight", "bold");
				
			
		
	
	var ’•’Ω=’¢.select(’•’¥, "section"); 
		’•’Ω.value("height", "calc(100% - 40px)");
	

var ’•’æ=’¢.select(’•’´, ".fullscreen"); 
	’•’æ.value("position", "fixed");
	’•’æ.value("top, bottom, left, right", "0");

var ’•’ø=’¢.select(’•’´, ".editor"); 
	’•’ø.value("display", "inline-block");
	’•’ø.value("position", "relative");
	’•’ø.value("width", "calc(100% / " + (showCount.value) + ")");
	’•’ø.value("height", "100%");

var ’•÷Å=’¢.select(’•’´, ".x"); 
	var ’•÷Ç=’¢.select(’•÷Å, ".top, .bottom"); 
		’•÷Ç.value("display", "inline-block");
		’•÷Ç.value("width", "50%");
		’•÷Ç.value("height", "100vh");
	

var ’•÷É=’¢.select(’•’´, ".y"); 
	var ’•÷Ñ=’¢.select(’•÷É, ".top, .bottom"); 
		’•÷Ñ.value("height", "50vh");
	

var ’•÷Ö=’¢.select(’•’´, ".text"); 
	’•÷Ö.value("padding", "8px");
	’•÷Ö.value("width, height", "100%");
	’•÷Ö.value("border", "none");
	’•÷Ö.value("font-family", "monospace");
	’•÷Ö.value("resize", "none");
	var ’•÷Ü=’¢.select(’•÷Ö, "&:focus"); 
		’•÷Ü.value("outline", "none");
	

var ’•÷á=’¢.select(’•’´, ".color-red"); 
	’•÷á.value("color", (color.red.text));


var ’¶’¢=’¢.select(’•’´, ".CodeMirror"); 
	’¶’¢.value("height", "100%");
	’¶’¢.value("border-top, border-bottom", "1px solid silver");
	var ’¶’£=’¢.select(’¶’¢, ".error::before, .warn::before"); 
		’¶’£.value("position", "absolute");
		’¶’£.value("font-size", ".8em");
	
	var ’¶’§=’¢.select(’¶’¢, ".error::before"); 
		’¶’§.value("content", "'üõë'");
	
	var ’¶’•=’¢.select(’¶’¢, ".warn::before"); 
		’¶’•.value("content", "'‚ö†Ô∏è'");
	
return ’•’´.content}, ’£, ’•, [showCount], [])}], [’¢.append, document.head, ’¶, 0, 0]);’¢.query(this, document, ’£, ".content", false, function(’£, ’§){’¢(this, ’£, ’•, ’¶, [’¢.update, {args:[’¢.attr(2, "class", alignment), ’¢.attr(2, "class:has-errors", ’¢.computedObservable(this, ’•, [result], function(){return result.value.errors.length}, [])), ’¢.attr(2, "class:has-warnings", ’¢.computedObservable(this, ’•, [result], function(){return result.value.warnings.length}, []))]}], [’¢.body, ’™, function(’£, ’¶, ’™){

	’¢(this, ’£, ’•, ’¶, [’¢.create, "section", {args:[’¢.attr(0, "class", "top")]}], [’¢.body, ’™, function(’£, ’¶, ’™){
		’¢(this, ’£, ’•, ’¶, [’¢.create, "section", {args:[’¢.attr(0, "class", "filename")]}], [’¢.body, ’™, function(’£, ’¶, ’™){
			if(!hash) {
				’¢(this, ’£, ’•, ’¶, [’¢.create, "input", {}], [’¢.forms, ["", file]], [’¢.append, ’£, ’¶]);
				if(window.localStorage) {
					’¢(this, ’£, ’•, ’¶, [’¢.create, "select", {}], [’¢.body, ’™, function(’£, ’¶, ’™){
						’¢.forEach(this, Object.keys(window.localStorage).sort() , function(key) {
							if(key.substr(0, 8) == prefix + ".") {
								var value = key.substr(8);
								’¢(this, ’£, ’•, ’¶, [’¢.create, "option", {args:[’¢.attr(0, "value", value), ’¢.attr(1, "textContent", value)]}], [’¢.append, ’£, ’¶]);
							}
						});
					}], [’¢.forms, ["", file]], [’¢.append, ’£, ’¶]);
				}
			}
			’¢.bindEach(this, ’£, ’•, ’¶, content, function(){return content.value.show }, function(’£, ’•, ’¶, type) {
				’¢(this, ’£, ’•, ’¶, [’¢.create, "label", {args:[’¢.attr(0, "style", "margin-left:12px")]}], [’¢.body, ’™, function(’£, ’¶, ’™){
					’¢(this, ’£, ’•, ’¶, [’¢.create, "input", {args:[’¢.attr(0, "style", "vertical-align:middle"), ’¢.attr(0, "type", "checkbox")]}], [’¢.forms, ["", ’¢.computedObservable(this, ’•, [content], function(){return content.value.show[type]}, [])]], [’¢.append, ’£, ’¶]);’¢.text(’£, ’•, ’¶, "\n\
					" + (type.toUpperCase()) + "\n\
				");}], [’¢.append, ’£, ’¶]);
			});
			’¢(this, ’£, ’•, ’¶, [’¢.create, "label", {args:[’¢.attr(0, "style", "margin-left:12px")]}], [’¢.body, ’™, function(’£, ’¶, ’™){’¢.text(’£, ’•, ’¶, "\n\
				debug\n\
				");’¢(this, ’£, ’•, ’¶, [’¢.create, "input", {args:[’¢.attr(0, "style", "vertical-align:middle"), ’¢.attr(0, "type", "checkbox")]}], [’¢.forms, ["", debugMode]], [’¢.append, ’£, ’¶]);
			}], [’¢.append, ’£, ’¶]);
			’¢(this, ’£, ’•, ’¶, [’¢.create, "select", {args:[’¢.attr(0, "style", "margin-left:12px")]}], [’¢.body, ’™, function(’£, ’¶, ’™){
				’¢(this, ’£, ’•, ’¶, [’¢.create, "option", {args:[’¢.attr(0, "value", "y")]}], [’¢.body, ’™, function(’£, ’¶, ’™){’¢.text(’£, ’•, ’¶, "Vertical");}], [’¢.append, ’£, ’¶]);
				’¢(this, ’£, ’•, ’¶, [’¢.create, "option", {args:[’¢.attr(0, "value", "x")]}], [’¢.body, ’™, function(’£, ’¶, ’™){’¢.text(’£, ’•, ’¶, "Horizontal");}], [’¢.append, ’£, ’¶]);
			}], [’¢.forms, ["", alignment]], [’¢.append, ’£, ’¶]);
			’¢(this, ’£, ’•, ’¶, [’¢.create, "a", {args:[’¢.attr(0, "id", "github"), ’¢.attr(0, "href", "https://github.com/sactory/sactory"), ’¢.attr(0, "target", "_blank"), ’¢.attr(1, "hidden", true)]}], [’¢.append, ’£, ’¶]);
			’¢(this, ’£, ’•, ’¶, [’¢.create, "span", {args:[’¢.attr(0, "style", "float:right;font-weight:bold;color:darkviolet;cursor:pointer"), ’¢.attr(1, "textContent", ’¢.computedObservable(this, ’•, [version], function(){return ("Sactory v" + version.value)}, [])), ’¢.attr(3, "click", function(event){ this.previousElementSibling.click() })]}], [’¢.append, ’£, ’¶]);
		}], [’¢.append, ’£, ’¶]);
		’¢(this, ’£, ’•, ’¶, [’¢.create, "section", {args:[’¢.attr(0, "class", "input")]}], [’¢.body, ’™, function(’£, ’¶, ’™){
			’¢.forEach(this, ["js", "html", "css"] , function(type) {
				’¢.bindIfElse(this, ’£, ’•, ’¶, [[function(){return (content.value.show[type])}, [content]]], function(’£, ’•, ’¶) {
					’¢(this, ’£, ’•, ’¶, [’¢.create, "div", {args:[’¢.attr(0, "id", type), ’¢.attr(0, "class", "editor")]}], [’¢.body, ’™, function(’£, ’¶, ’™){
						’¢(this, ’£, ’•, ’¶, [’¢.create, "textarea", {args:[’¢.attr(1, "value", content.value.content[type])]}], [’¢.body, ’™, function(’£, ’¶, ’™){
							’¢.on(this, ’£, ’•, "documentappend", function(){
								inputs[type] = CodeMirror.fromTextArea(this, {
									lineNumbers: true,
									indentWithTabs: true,
									smartIndent: false,
									lineWrapping: true,
									mode: type == "js" ? "javascript" : (type == "html" ? "htmlmixed" : "css")
								});
								’¢.query(this, ’£, ’£, this.nextElementSibling, false, function(’£, ’§){’¢(this, ’£, ’•, ’¶, [’¢.update, {args:[’¢.attr(3, (’¢.config.shortcut.save)+":prevent", save)]}])})
							});
						}], [’¢.append, ’£, ’¶, 0, 0]);
						’¢(this, ’£, ’•, ’¶, [’¢.create, "select", {args:[’¢.attr(0, "class", "mode")]}], [’¢.body, ’™, function(’£, ’¶, ’™){
							’¢.forEach(this, modes[type] , function(m) {
								’¢(this, ’£, ’•, ’¶, [’¢.create, "option", {args:[’¢.attr(0, "value", m), ’¢.attr(1, "textContent", m)]}], [’¢.append, ’£, ’¶]);
							});
						}], [’¢.forms, ["", ’¢.computedObservable(this, ’•, [content], function(){return content.value.mode[type]}, [])]], [’¢.append, ’£, ’¶]);
					}], [’¢.append, ’£, ’¶]);
				});
			});
		}], [’¢.append, ’£, ’¶]);
	}], [’¢.append, ’£, ’¶]);

	’¢(this, ’£, ’•, ’¶, [’¢.create, "section", {args:[’¢.attr(0, "class", "bottom")]}], [’¢.body, ’™, function(’£, ’¶, ’™){

		’¢(this, ’£, ’•, ’¶, [’¢.create, "nav", {}], [’¢.body, ’™, function(’£, ’¶, ’™){
			’¢(this, ’£, ’•, ’¶, [’¢.create, "div", {args:[’¢.attr(0, "style", "margin:8px 0 10px")]}], [’¢.body, ’™, function(’£, ’¶, ’™){
				’¢.forEach(this, Object.keys(tabs) , function(key) {
					’¢(this, ’£, ’•, ’¶, [’¢.create, "span", {args:[’¢.attr(0, "class", "item"), ’¢.attr(2, "class", key), ’¢.attr(2, "class:active", ’¢.computedObservable(this, ’•, [tab], function(){return (tab.value == key)}, [])), ’¢.attr(3, "click", function(event){ tab.value = key }), ’¢.attr(1, "textContent", tabs[key])]}], [’¢.append, ’£, ’¶]);
				});
			}], [’¢.append, ’£, ’¶]);
		}], [’¢.append, ’£, ’¶]);

		’¢(this, ’£, ’•, ’¶, [’¢.create, "section", {args:[’¢.attr(1, "visible", ’¢.computedObservable(this, ’•, [tab], function(){return (tab.value == "output")}, []))]}], [’¢.body, ’™, function(’£, ’¶, ’™){
			’¢.bindIfElse(this, ’£, ’•, ’¶, [[function(){return (!result.value.error)}, [result]]], function(’£, ’•, ’¶) {
				’¢(this, ’£, ’•, ’¶, [’¢.create, "iframe", {args:[’¢.attr(0, "style", "width:100%;height:100%;border:none"), ’¢.attr(0, "src", "about:blank")]}], [’¢.body, ’™, function(’£, ’¶, ’™){
					’¢.on(this, ’£, ’•, "documentappend", function(){
						window.sandbox = this.contentWindow;
						’¢.query(this, ’£, ’£, this.contentWindow.document.head, false, function(’£, ’§){’¢(this, ’£, ’•, ’¶, [’¢.body, ’™, function(’£, ’¶, ’™){
							’¢(this, ’£, ’•, ’¶, [’¢.create, "meta", {args:[’¢.attr(0, "charset", "UTF-8")]}], [’¢.append, ’£, ’¶]);
							’¢(this, ’£, ’•, ’¶, [’¢.create, "script", {args:[’¢.attr(0, "src", ’¢.computedObservable(this, ’•, [debugMode], function(){return ((hash && hash.dist || "./dist/") + "sactory" + (debugMode.value ? ".debug" : "") + ".js")}, []))]}], [’¢.append, ’£, ’¶, 0, 0]).onload = function(){
								’¢(this, ’£, ’•, ’¶, [’¢.create, "script", {args:[’¢.attr(1, "textContent", ’¢.computedObservable(this, ’•, [result], function(){return (result.value.before + result.value.source + result.value.after)}, []))]}], [’¢.append, ’£, ’¶, 0, 0]);
								// update the loaded version
								version.value = window.sandbox.Sactory.VERSION;
							};
						}])})
					});
				}], [’¢.append, ’£, ’¶, 0, 0]);
			});
		}], [’¢.append, ’£, ’¶]);

		’¢(this, ’£, ’•, ’¶, [’¢.create, "section", {args:[’¢.attr(1, "visible", ’¢.computedObservable(this, ’•, [tab], function(){return (tab.value == "error")}, []))]}], [’¢.body, ’™, function(’£, ’¶, ’™){
			’¢(this, ’£, ’•, ’¶, [’¢.create, "textarea", {args:[’¢.attr(0, "class", "text color-red"), ’¢.attr(0, "readonly"), ’¢.attr(1, "value", ’¢.computedObservable(this, ’•, [result], function(){return result.value.errors.join('\n')}, []))]}], [’¢.append, ’£, ’¶]);
		}], [’¢.append, ’£, ’¶]);

		’¢(this, ’£, ’•, ’¶, [’¢.create, "section", {args:[’¢.attr(1, "visible", ’¢.computedObservable(this, ’•, [tab], function(){return (tab.value == "warn")}, []))]}], [’¢.body, ’™, function(’£, ’¶, ’™){
			’¢(this, ’£, ’•, ’¶, [’¢.create, "textarea", {args:[’¢.attr(0, "class", "text"), ’¢.attr(0, "readonly"), ’¢.attr(1, "value", ’¢.computedObservable(this, ’•, [result], function(){return (result.value.warnings ? result.value.warnings.join('\n') : "")}, []))]}], [’¢.append, ’£, ’¶]);
		}], [’¢.append, ’£, ’¶]);

		’¢.bindIfElse(this, ’£, ’•, ’¶, [[function(){return (tab.value == "code")}, [tab]]], function(’£, ’•, ’¶) {
			’¢(this, ’£, ’•, ’¶, [’¢.create, "section", {}], [’¢.body, ’™, function(’£, ’¶, ’™){
				’¢.forEach(this, ["js", "html", "css"] , function(type) {
					’¢.bindIfElse(this, ’£, ’•, ’¶, [[function(){return (content.value.show[type])}, [content]]], function(’£, ’•, ’¶) {
						’¢(this, ’£, ’•, ’¶, [’¢.create, "div", {args:[’¢.attr(0, "id", ("output-" + type)), ’¢.attr(0, "class", "editor")]}], [’¢.body, ’™, function(’£, ’¶, ’™){
							’¢(this, ’£, ’•, ’¶, [’¢.create, "textarea", {args:[’¢.attr(1, "value", (result.value[type] || ""))]}], [’¢.body, ’™, function(’£, ’¶, ’™){
								’¢.on(this, ’£, ’•, "documentappend", function(){
									outputs[type] = CodeMirror.fromTextArea(this, {
										lineNumbers: true,
										lineWrapping: true,
										readOnly: true,
										mode: "javascript"
									});
								});
							}], [’¢.append, ’£, ’¶]);
						}], [’¢.append, ’£, ’¶, 0, 0]);
					});
				});
			}], [’¢.append, ’£, ’¶]);
		});

		’¢(this, ’£, ’•, ’¶, [’¢.create, "section", {args:[’¢.attr(1, "visible", ’¢.computedObservable(this, ’•, [tab], function(){return (tab.value == "info")}, []))]}], [’¢.body, ’™, function(’£, ’¶, ’™){
			’¢(this, ’£, ’•, ’¶, [’¢.create, "textarea", {args:[’¢.attr(0, "class", "text"), ’¢.attr(0, "readonly"), ’¢.attr(1, "value", ’¢.computedObservable(this, ’•, [result], function(){return (result.value.errors.length ? "" : JSON.stringify(result.value.info, null, 4))}, []))]}], [’¢.append, ’£, ’¶]);
		}], [’¢.append, ’£, ’¶]);

	}], [’¢.append, ’£, ’¶]);

}])})


});})