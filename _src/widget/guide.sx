const Index = require("./index");

const capitalize = value => value.charAt(0).toUpperCase() + value.substr(1);

module.exports = class extends Index {

	render({version, sections, section, contents}) {
		return <:super>
			<:head>
				<title>${capitalize(section)} — Guide — Sactory v${version}</title>
			</:head>
			<div>
				<input id="menu" type="checkbox" &display="none" />
				<div class="menu">
					<label for="menu" class="menu-toggler">
						<i class="fas fa-times" />
					</label>
					foreach(sections as [section, subs]) {
						<a href=`./${section}` ~text=capitalize(section) />
						<div class="section">
							foreach(subs as sub) {
								<a href=`./${section}#${sub}` ~text=capitalize(sub) />
							}
						</div>
					}
				</div>
				<div class="sections">
					<div class="container">
						const index = sections.findIndex(([s]) => s == section);
						<label for="menu" class="menu-toggler">
							<i class="fas fa-bars" />
						</label>
						<h1>
							if(index > 0) {
								<a href=`./${sections[index - 1][0]}`>
									<i class="fas fa-arrow-left" />
								</a>
							}
							<span>${capitalize(section)}</span>
							if(index < sections.length - 1) {
								<a href=`./${sections[index + 1][0]}`>
									<i class="fas fa-arrow-right" />
								</a>
							}
						</h1>
						foreach(contents as {sub, content}) {
							<h2 id=sub class="section-title">
								<a href=`#${sub}`>#</a>
								<span>${capitalize(sub)}</span>
								<a href=`../tour/${section}/${sub}` target="_blank" title="Open in the interactive tour">
									<i class="far fa-keyboard" />
								</a>
							</h2>
							<hr />
							<[content] $guide />
						}
					</div>
				</div>
				<style :scoped>
					position: relative;
					min-height: 100%;

					.menu, .sections {
						background: white;
						min-height: 100%;
						padding: 16px;
					}

					.menu {
						position: fixed;
						top: 64px;
						left: 0;
						width: 256px;
						.section {
							padding-left: 16px;
						}
						a {
							display: block;
							color: #333;
							font-weight: normal;
						}
						& > a {
							font-weight: bold;
						}
					}

					.menu-toggler {
						display: none;
						font-size: 24px;
						cursor: pointer;
					}

					.sections {
						margin-left: 260px;
						width: calc(100% - 260px);
						.container {
							margin: 0 auto;
							max-width: 700px;
							scroll-behavior: smooth;
						}
						h1 {
							* + * {
								margin-left: 12px;
							}
							i {
								font-size: .75em;
							}
						}
						.section-title {
							margin-top: 32px;
							* + * {
								margin-left: 8px;
							}
						}
					}

					@media screen and (max-width: 956px) {
						.menu {
							transition: all .25s ease-out;
							transform: translateX(-100%);
						}
						#menu:checked ~ .menu {
							transform: none;
							box-shadow: 0 1px 32px rgba(0, 0, 0, .5);
						} 
						.menu-toggler {
							display: inline-block;
						}
						.sections {
							margin-left: 0;
							width: 100%;
						}
					}
				</style>
			</div>
		</:super>
	}
};
